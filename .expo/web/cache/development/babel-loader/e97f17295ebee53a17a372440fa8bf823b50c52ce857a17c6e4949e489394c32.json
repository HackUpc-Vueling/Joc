{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar rankingScreen = function rankingScreen() {\n  var _useState = useState([{\n      id: 1,\n      name: 'Javi',\n      km: 3000\n    }, {\n      id: 2,\n      name: 'Tania',\n      km: 8000\n    }, {\n      id: 3,\n      name: 'Eric',\n      km: 2500\n    }, {\n      id: 4,\n      name: 'Nuria',\n      km: 7000\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        margin: 16\n      },\n      children: \"User Ranking\"\n    }), _jsx(FlatList, {\n      data: users,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(Text, {\n          style: {\n            fontSize: 18,\n            marginHorizontal: 16\n          },\n          children: [item.name, \" \", item.km]\n        });\n      }\n    }), _jsx(View, {\n      style: {\n        position: 'absolute',\n        bottom: 16,\n        right: 16\n      },\n      children: _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: '#FBDB5C',\n          padding: 16,\n          borderRadius: 8\n        },\n        onPress: function onPress() {\n          return console.log('Clicked button');\n        },\n        children: _jsx(Text, {\n          style: {\n            color: '#757574',\n            fontWeight: 'bold'\n          },\n          children: \" Try Again\"\n        })\n      })\n    })]\n  });\n};\nexport default Ranking;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","rankingScreen","_useState","id","name","km","_useState2","_slicedToArray","users","setUsers","children","style","fontSize","fontWeight","margin","data","keyExtractor","item","toString","renderItem","_ref","marginHorizontal","position","bottom","right","backgroundColor","padding","borderRadius","onPress","console","log","color","Ranking"],"sources":["/home/tania/hackupc/Joc/screens/Ranking.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { View, Text, FlatList, TouchableOpacity} from 'react-native';\n\nconst rankingScreen =() => {\n    const [users, setUsers] = useState([\n        { id: 1, name: 'Javi', km: 3000 },\n        { id: 2, name: 'Tania', km: 8000 },\n        { id: 3, name: 'Eric', km: 2500 },\n        { id: 4, name: 'Nuria', km: 7000 }\n      ]);\n\n      return(\n        <View>\n            <Text style={{ fontSize: 24, fontWeight: 'bold', margin: 16 }}>\n            User Ranking\n            </Text>\n            <FlatList\n            data={users}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item }) => (\n                <Text style={{ fontSize: 18, marginHorizontal: 16 }}>\n                  {item.name} {item.km}\n                </Text>\n            )}\n          />\n          <View style={{ position: 'absolute', bottom: 16, right: 16 }}>\n            <TouchableOpacity\n              style={{ backgroundColor: '#FBDB5C', padding: 16, borderRadius: 8 }}\n              onPress={() => console.log('Clicked button')}\n            >\n              <Text style={{ color: '#757574', fontWeight: 'bold' }}> Try Again</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      );\n}\n\nexport default Ranking;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjD,IAAMC,aAAa,GAAE,SAAfA,aAAaA,CAAA,EAAQ;EACvB,IAAAC,SAAA,GAA0BX,QAAQ,CAAC,CAC/B;MAAEY,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,EAAE,EAAE;IAAK,CAAC,EACjC;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,EAAE,EAAE;IAAK,CAAC,EAClC;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,EAAE,EAAE;IAAK,CAAC,EACjC;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,EAAE,EAAE;IAAK,CAAC,CACnC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAL,SAAA;IALGM,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAOpB,OACEN,KAAA,CAACP,IAAI;IAAAiB,QAAA,GACDZ,IAAA,CAACJ,IAAI;MAACiB,KAAK,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAAJ,QAAA,EAAC;IAE/D,CAAM,CAAC,EACPZ,IAAA,CAACH,QAAQ;MACToB,IAAI,EAAEP,KAAM;MACZQ,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKA,IAAI,CAACd,EAAE,CAACe,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CC,UAAU,EAAE,SAAAA,WAAAC,IAAA;QAAA,IAAGH,IAAI,GAAAG,IAAA,CAAJH,IAAI;QAAA,OACfjB,KAAA,CAACN,IAAI;UAACiB,KAAK,EAAE;YAAEC,QAAQ,EAAE,EAAE;YAAES,gBAAgB,EAAE;UAAG,CAAE;UAAAX,QAAA,GACjDO,IAAI,CAACb,IAAI,EAAC,GAAC,EAACa,IAAI,CAACZ,EAAE;QAAA,CAChB,CAAC;MAAA;IACT,CACH,CAAC,EACFP,IAAA,CAACL,IAAI;MAACkB,KAAK,EAAE;QAAEW,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAE;MAAAd,QAAA,EAC3DZ,IAAA,CAACF,gBAAgB;QACfe,KAAK,EAAE;UAAEc,eAAe,EAAE,SAAS;UAAEC,OAAO,EAAE,EAAE;UAAEC,YAAY,EAAE;QAAE,CAAE;QACpEC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAAA,CAAC;QAAApB,QAAA,EAE7CZ,IAAA,CAACJ,IAAI;UAACiB,KAAK,EAAE;YAAEoB,KAAK,EAAE,SAAS;YAAElB,UAAU,EAAE;UAAO,CAAE;UAAAH,QAAA,EAAC;QAAU,CAAM;MAAC,CACxD;IAAC,CACf,CAAC;EAAA,CACH,CAAC;AAEf,CAAC;AAED,eAAesB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}